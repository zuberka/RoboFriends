{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","value","state","_this2","fetch","then","response","json","users","_this3","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_CardList","Component","ReactDOM","render","src_containers_App","document","getElementById"],"mappings":"yNAgBeA,EAdH,SAAAC,GAAwB,IAAtBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,GAE3B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wDACdH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,SAASC,IAAG,wBAAAC,OAA0BP,EAA1B,cACpBC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKL,GACLG,EAAAC,EAAAC,cAAA,SAAIJ,MCcKS,EAnBE,SAAAX,GAAgB,IAAbY,EAAaZ,EAAbY,OACnB,OACIR,EAAAC,EAAAC,cAAA,WAEKM,EAAOC,IAAI,SAACC,EAAMC,GACtB,OACDX,EAAAC,EAAAC,cAACU,EAAD,CACGC,IAAOL,EAAOG,GAAGZ,GACnBA,GAAIS,EAAOG,GAAGZ,GACdF,KAAMW,EAAOG,GAAGd,KAChBC,MAAOU,EAAOG,GAAGb,YCCRgB,EAbG,SAAAlB,GAAiCA,EAA/BmB,YAA+B,IAAlBC,EAAkBpB,EAAlBoB,aAChC,OACChB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,SACAC,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCCEI,EARA,SAACC,GACf,OACCrB,EAAAC,EAAAC,cAAA,OAAKoB,MAAQ,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UAClEJ,EAAMK,WC4DIC,qBApDd,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACbC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAaDI,eAAiB,SAACC,GAEjBR,EAAKS,SAAS,CAACtB,YAAaqB,EAAME,OAAOC,SAdzCX,EAAKY,MAAQ,CACZhC,OAAQ,GACRO,YAAa,IAJDa,mFAQM,IAAAa,EAAAV,KACnBW,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,MAAI,CAACL,EAAKJ,SAAS,CAAE7B,OAAQsC,wCAWhC,IAAAC,EAAAhB,KACFiB,EAAiBjB,KAAKS,MAAMhC,OAAOyC,OAAO,SAAAC,GAC/C,OAAOA,EAAMrD,KAAKsD,cAAcC,SAASL,EAAKP,MAAMzB,YAAYoC,iBAEjE,OAAiC,IAA7BpB,KAAKS,MAAMhC,OAAO6C,OACdrD,EAAAC,EAAAC,cAAA,wBAGLF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAW,MAAf,eACAH,EAAAC,EAAAC,cAACoD,EAAD,CAAWtC,aAAce,KAAKI,iBAC9BnC,EAAAC,EAAAC,cAACqD,EAAD,KACEvD,EAAAC,EAAAC,cAACsD,EAAD,CAAUhD,OAAQwC,aAnCRS,oBCDlBC,IAASC,OACI3D,EAAAC,EAAAC,cAAC0D,EAAD,MACXC,SAASC,eAAe","file":"static/js/main.c0428903.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card =({name, email, id }) => { // destrukturyzacja robots\r\n\r\nreturn(\r\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 \">\r\n\t\t <img alt='robots' src={`https://robohash.org/${id}?200x200`} /> \r\n\t\t  <div>\r\n\t\t    <h2>{name}</h2>\r\n\t\t    <p>{email}</p>\r\n\t\t  </div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Card;\r\n\r\n\r\n/* \r\n(1)\r\nreturn(\r\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 \">\r\n\t\t -->(1) <img alt='robots' src={`https://robohash.org/${id}?200x200`} /> \r\n\t\t  <div>\r\n\t\t    <h2>{props.name}</h2>\r\n\t\t    <p>{props.email}</p>\r\n\t\t  </div>\r\n\t\t</div>\r\n\t);\r\n\r\n(2)\r\nconst Card =(props) => {\r\n\t//(1)const {name, email, id } = props;\r\n\treturn(\r\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 \">\r\n\t\t  <img alt='robots' src={`https://robohash.org/${props.id}?200x200`} />\r\n\t\t  <div>\r\n\t\t    <h2>{props.name}</h2>\r\n\t\t    <p>{props.email}</p>\r\n\t\t  </div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\t*/","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn(\r\n\t\t   <div>\r\n\t\t       {\r\n\t\t       \trobots.map((user, i) => {\r\n\t\t\t\t  return (\r\n\t\t\t\t\t<Card \r\n\t\t  \t\t\t\tkey = {robots[i].id} \r\n\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t     }   \r\n\t\t   </div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search robots'\r\n\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style= {{overflow: 'scroll', border: '1px solid black', height: '800px'}}>\r\n\t\t  {props.children}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\n//import { robots } from './robots'; \r\nimport './App.css';\r\n\r\n//powyżej użyta destrukturyzacja poniewaz robots moze \r\n//zwrocic (exportowac) rozne wyniki nie jest exportowany poprzez \r\n//default(tylko dla jednego exportu)\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [], //robots: robots,\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(users => [this.setState({ robots: users})]);\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\r\n\t\tthis.setState({searchfield: event.target.value}) //event zwraca aktualną wartość input\r\n\t\t\r\n\t\t//console.log(filteredRobots);\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst filteredRobots = this.state.robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n\t\t})\r\n\t\tif (this.state.robots.length === 0) {\r\n\t\t\treturn <h1>Loading...</h1>\r\n\t\t} else {\r\n\t\t  return(\r\n\t\t\t  <div className='tc'>\r\n\t\t\t\t  <h1 className= 'f1'>RoboFriends</h1>\r\n\t\t\t\t  <SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t\t  <Scroll>\r\n\t\t\t\t    <CardList robots={filteredRobots}/>\r\n\t\t\t\t  </Scroll>\r\n\t\t\t  </div>\r\n\t\t  );\r\n\t   }\r\n\t}\t\r\n}\r\n\r\n//const App = () => {\r\n//\treturn(\r\n\t\t// <div className='tc'>\r\n\t\t\t// <h1>RoboFriends</h1>\r\n\t\t\t// <SearchBox/>\r\n\t\t\t// <CardList robots={robots}/>\r\n\t\t// </div>\r\n\t// )\r\n// }\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Card from './Card';\n//import CardList from './CardList';\nimport App from './containers/App';\nimport 'tachyons';\n\n\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t            <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}